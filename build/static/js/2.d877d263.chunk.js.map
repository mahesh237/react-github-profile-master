{"version":3,"sources":["shared/layout.js","screens/user/components/query.js","screens/user/user-context.js","screens/user/components/profile.js","screens/user/components/repo-filter.js","screens/user/components/repo-list.js","screens/user/index.js"],"names":["sizes","queries","tiny","concat","phone","tablet","desktop","Container","Object","styled_base_browser_esm","target","_styled2","label","paddingRight","paddingLeft","marginRight","marginLeft","defineProperty","maxWidth","Row","display","justifyContent","Column","_ref","width","flex","Query","state","loaded","fetching","data","error","this","_isMounted","query","prevProps","isEqual","props","variables","_this2","setState","context","request","then","res","safeSetState","normalize","catch","apply","arguments","children","Component","defaultProps","contextType","GitHub","UserContext","React","createContext","Profile","user","core_browser_esm","pattern","responsive","rounded","alt","src","avatarUrl","size","name","tint","css","fontWeight","fontSize","login","ProfileStatsSection","organizations","length","OrganizationsSection","orgs","_ref2","textAlign","ProfileStat","value","followersCount","repositoriesCount","followingCount","_ref3","margin","_ref4","map","org","key","id","href","url","data-tooltip","borderRadius","height","ProfileUserConsumer","user_context","Consumer","RepoFilter","filter","onUpdate","react_default","a","createElement","type","aria-label","placeholder","onChange","RepoList","repos","matchingRepos","matchSorter","keys","maxRanking","rankings","SIMPLE_MATCH","CONTAINS","listStyle","marginTop","marginBottom","repo","RepoListItem","ListItem","theme","common","borderBottom","Stat","Text","styles","withComponent","timeUpdated","distanceInWordsToNow","pushedAt","float","language","stargazersCount","forksCount","description","RepoListUserConsumer","userData","assign","repositories","userQuery","gql","String","raw","_templateObject","taggedTemplateLiteral","normalizeUserData","_data$user","followers","totalCount","following","_data$user$repositori","reposData","edges","orgsData","r","objectSpread","node","languages","undefined","stargazers","o","User","handleFilterUpdate","_this","username","JSON","stringify","Provider","profile","onClick","logout","to","repo_filter","repo_list","GitHubContext"],"mappings":"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","file":"static/js/2.d877d263.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro'\n\nconst sizes = {\n  phone: 768,\n  tablet: 992,\n  desktop: 1200,\n}\n\nconst queries = {\n  tiny: `@media (max-width: ${sizes.phone}px)`,\n  phone: `@media (min-width: ${sizes.phone}px)`,\n  tablet: `@media (min-width: ${sizes.tablet}px)`,\n  desktop: `@media (min-width: ${sizes.desktop}px)`,\n}\n\nconst Container = styled.div({\n  label: 'container',\n  paddingRight: '15px',\n  paddingLeft: '15px',\n  marginRight: 'auto',\n  marginLeft: 'auto',\n  [queries.phone]: {\n    maxWidth: '750px',\n  },\n  [queries.tablet]: {\n    maxWidth: '970px',\n  },\n  [queries.desktop]: {\n    maxWidth: '1170px',\n  },\n})\n\nconst Row = styled.div({\n  label: 'row',\n  marginRight: '-15px',\n  marginLeft: '-15px',\n  [queries.phone]: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n})\n\nconst Column = styled.div(\n  {\n    label: 'column',\n    position: 'relative',\n    minHeight: '1px',\n    paddingRight: '15px',\n    paddingLeft: '15px',\n  },\n  ({width}) => ({\n    [queries.phone]: {\n      flex: width,\n    },\n  }),\n)\n\nexport {queries, Container, Row, Column}\n","import {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport isEqual from 'lodash/isEqual'\nimport * as GitHub from '../../../github-client'\n\nclass Query extends Component {\n  static propTypes = {\n    query: PropTypes.string.isRequired,\n    variables: PropTypes.object,\n    children: PropTypes.func.isRequired,\n    normalize: PropTypes.func,\n  }\n  static defaultProps = {\n    normalize: data => data,\n  }\n  static contextType = GitHub.Context\n\n  state = {loaded: false, fetching: false, data: null, error: null}\n\n  componentDidMount() {\n    this._isMounted = true\n    this.query()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !isEqual(this.props.query, prevProps.query) ||\n      !isEqual(this.props.variables, prevProps.variables)\n    ) {\n      this.query()\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  query() {\n    this.setState({fetching: true})\n    const client = this.context\n    client\n      .request(this.props.query, this.props.variables)\n      .then(res =>\n        this.safeSetState({\n          data: this.props.normalize(res),\n          error: null,\n          loaded: true,\n          fetching: false,\n        }),\n      )\n      .catch(error =>\n        this.safeSetState({\n          error,\n          data: null,\n          loaded: false,\n          fetching: false,\n        }),\n      )\n  }\n\n  safeSetState(...args) {\n    this._isMounted && this.setState(...args)\n  }\n\n  render() {\n    return this.props.children(this.state)\n  }\n}\n\nexport default Query\n","import React from 'react'\n\nconst UserContext = React.createContext()\n\nexport default UserContext\n","/* @jsx jsx */\nimport {jsx} from '@emotion/core'\n\nimport PropTypes from 'prop-types'\nimport {Section, Text, Image} from '../../../shared/pattern'\nimport UserContext from '../user-context'\n\nfunction Profile({user}) {\n  return (\n    <div>\n      <Section>\n        <Image responsive rounded alt=\"User Avatar\" src={user.avatarUrl} />\n        <Text size=\"heading\">{user.name}</Text>\n        <Text\n          size=\"standard\"\n          tint=\"faded\"\n          css={{fontWeight: 300, fontSize: 20}}\n        >\n          {user.login}\n        </Text>\n      </Section>\n      <ProfileStatsSection user={user} />\n      {user.organizations.length ? (\n        <OrganizationsSection orgs={user.organizations} />\n      ) : null}\n    </div>\n  )\n}\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    avatarUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    login: PropTypes.string.isRequired,\n    organizations: PropTypes.array.isRequired,\n  }).isRequired,\n}\n\nfunction ProfileStatsSection({user}) {\n  return (\n    <Section css={{textAlign: 'center'}}>\n      <ProfileStat value={user.followersCount} label=\"followers\" />\n      <ProfileStat value={user.repositoriesCount} label=\"repositories\" />\n      <ProfileStat value={user.followingCount} label=\"following\" />\n    </Section>\n  )\n}\n\nProfileStatsSection.propTypes = {\n  user: PropTypes.shape({\n    followersCount: PropTypes.number,\n    repositoriesCount: PropTypes.number,\n    followingCount: PropTypes.number,\n  }),\n}\n\nfunction ProfileStat({value, label}) {\n  return (\n    <div\n      css={{\n        display: 'inline-block',\n        width: 80,\n      }}\n    >\n      <Text size=\"heading\" css={{margin: 0}}>\n        {value}\n      </Text>\n      <Text tint=\"fadedExtra\">\n        <small>{label}</small>\n      </Text>\n    </div>\n  )\n}\n\nProfileStat.propTypes = {\n  value: PropTypes.number,\n  label: PropTypes.string,\n}\n\nfunction OrganizationsSection({orgs}) {\n  return (\n    <Section>\n      <Text size=\"superstandard\">Organizations</Text>\n      {orgs.map(org => (\n        <a key={org.id} href={org.url} data-tooltip={org.login}>\n          <Image\n            src={org.avatarUrl}\n            alt={`${org.login} Avatar`}\n            css={{\n              borderRadius: 3,\n              margin: 5,\n              width: 42,\n              height: 42,\n            }}\n          />\n        </a>\n      ))}\n    </Section>\n  )\n}\n\nOrganizationsSection.propTypes = {\n  orgs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      avatarUrl: PropTypes.string.isRequired,\n      login: PropTypes.string.isRequired,\n    }),\n  ),\n}\n\nfunction ProfileUserConsumer() {\n  return (\n    <UserContext.Consumer>\n      {user => <Profile user={user} />}\n    </UserContext.Consumer>\n  )\n}\n\nexport default ProfileUserConsumer\n\n/*\neslint\nno-unused-vars: [\"warn\", {\"varsIgnorePattern\": \"(jsx)\"}]\nreact/react-in-jsx-scope: \"off\"\n*/\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport {Section, Input} from '../../../shared/pattern'\n\nexport default RepoFilter\n\nfunction RepoFilter({filter, onUpdate}) {\n  return (\n    <Section>\n      <Input\n        type=\"text\"\n        aria-label=\"Filter repositories\"\n        value={filter}\n        placeholder=\"Filter repositories...\"\n        onChange={({target: {value}}) => onUpdate(value)}\n      />\n    </Section>\n  )\n}\n\nRepoFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n}\n","/* @jsx jsx */\nimport {jsx} from '@emotion/core'\n\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled/macro'\nimport distanceInWordsToNow from 'date-fns/distance_in_words_to_now'\nimport matchSorter from 'match-sorter'\nimport {Text, Anchor} from '../../../shared/pattern'\nimport UserContext from '../user-context'\n\nfunction RepoList({repos, filter}) {\n  const matchingRepos = matchSorter(repos, filter, {\n    keys: [\n      'name',\n      {maxRanking: matchSorter.rankings.SIMPLE_MATCH, key: 'language'},\n      {maxRanking: matchSorter.rankings.CONTAINS, key: 'description'},\n    ],\n  })\n  return (\n    <ul\n      css={{\n        paddingLeft: 0,\n        listStyle: 'none',\n        marginTop: 0,\n        marginBottom: 10,\n      }}\n    >\n      {matchingRepos.map(repo => (\n        <RepoListItem key={repo.id} repo={repo} />\n      ))}\n    </ul>\n  )\n}\n\nRepoList.propTypes = {\n  filter: PropTypes.string.isRequired,\n  repos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n}\n\nconst ListItem = styled.li(\n  {padding: '25px 0'},\n  ({theme}) => theme.common.borderBottom,\n)\n\nconst Stat = styled(Text)({marginLeft: 10}).withComponent('strong')\nStat.defaultProps = {tint: 'fadedExtra'}\n\nfunction RepoListItem({repo}) {\n  const timeUpdated = distanceInWordsToNow(repo.pushedAt)\n  return (\n    <ListItem>\n      <div css={{float: 'right'}}>\n        <Stat>{repo.language}</Stat>\n        <Stat>&#9734; {repo.stargazersCount}</Stat>\n        <Stat>&#4292; {repo.forksCount}</Stat>\n      </div>\n      <div>\n        <Anchor href={repo.url}>\n          <Text size=\"superstandard\" css={{display: 'inline-block'}}>\n            {repo.name}\n          </Text>\n        </Anchor>\n      </div>\n      <p>\n        <Text tint=\"fadedExtra\" css={{margin: '0 0 10px'}}>\n          {repo.description}\n        </Text>\n      </p>\n      <time>\n        <Text tint=\"fadedExtra\">Updated {timeUpdated} ago</Text>\n      </time>\n    </ListItem>\n  )\n}\n\nRepoListItem.propTypes = {\n  repo: PropTypes.shape({\n    pushedAt: PropTypes.string,\n    language: PropTypes.string,\n    stargazersCount: PropTypes.number,\n    forksCount: PropTypes.number,\n    url: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n  }).isRequired,\n}\n\nfunction RepoListUserConsumer(props) {\n  return (\n    <UserContext.Consumer>\n      {userData => <RepoList repos={userData.repositories} {...props} />}\n    </UserContext.Consumer>\n  )\n}\n\nexport default RepoListUserConsumer\n\n/*\neslint\nno-unused-vars: [\"warn\", {\"varsIgnorePattern\": \"(jsx)\"}]\nreact/react-in-jsx-scope: \"off\"\n*/\n","/* @jsx jsx */\nimport {jsx} from '@emotion/core'\n\nimport {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Container, Row, Column} from '../../shared/layout'\nimport {\n  Text,\n  PrimaryButton,\n  IsolatedContainer,\n  ButtonLink,\n  LoadingMessagePage,\n} from '../../shared/pattern'\nimport {Context as GitHubContext} from '../../github-client'\nimport Query from './components/query'\nimport Profile from './components/profile'\nimport RepoFilter from './components/repo-filter'\nimport RepoList from './components/repo-list'\nimport UserContext from './user-context'\n\n// this allows prettier to format things without changing the string contents\nconst gql = String.raw\n\nconst userQuery = gql`\n  query getUserData($username: String!) {\n    user(login: $username) {\n      name\n      login\n      avatarUrl\n      followers {\n        totalCount\n      }\n      following {\n        totalCount\n      }\n      repositories(\n        privacy: PUBLIC\n        first: 100\n        isFork: false\n        ownerAffiliations: [COLLABORATOR, OWNER]\n        orderBy: {field: PUSHED_AT, direction: DESC}\n      ) {\n        totalCount\n        edges {\n          node {\n            id\n            name\n            description\n            url\n            pushedAt\n            stargazers {\n              totalCount\n            }\n            forkCount\n            languages(first: 1) {\n              edges {\n                node {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      organizations(first: 100) {\n        edges {\n          node {\n            avatarUrl\n            id\n            login\n            url\n          }\n        }\n      }\n    }\n  }\n`\n\nfunction normalizeUserData(data) {\n  const {\n    user: {\n      name,\n      login,\n      avatarUrl,\n      followers: {totalCount: followersCount},\n      following: {totalCount: followingCount},\n      repositories: {totalCount: repositoriesCount, edges: reposData},\n      organizations: {edges: orgsData},\n    },\n  } = data\n  const repositories = reposData.map(r => ({\n    ...r.node,\n    languages: undefined,\n    stargazersCount: r.node.stargazers.totalCount,\n    language: r.node.languages.edges[0]\n      ? r.node.languages.edges[0].node.name\n      : 'Unknown',\n  }))\n  const organizations = orgsData.map(o => o.node)\n  return {\n    name,\n    login,\n    avatarUrl,\n    followersCount,\n    followingCount,\n    repositoriesCount,\n    repositories,\n    organizations,\n  }\n}\n\nclass User extends Component {\n  static propTypes = {\n    username: PropTypes.string,\n  }\n  static contextType = GitHubContext\n  state = {filter: ''}\n\n  handleFilterUpdate = filter => {\n    this.setState({filter})\n  }\n\n  render() {\n    const {username} = this.props\n    const {filter} = this.state\n    return (\n      <Query\n        query={userQuery}\n        variables={{username}}\n        normalize={normalizeUserData}\n      >\n        {({fetching, data, error}) =>\n          error ? (\n            <IsolatedContainer>\n              <p>There was an error loading the data</p>\n              <pre>{JSON.stringify(error, null, 2)}</pre>\n            </IsolatedContainer>\n          ) : fetching ? (\n            <LoadingMessagePage>Loading data for {username}</LoadingMessagePage>\n          ) : data ? (\n            <UserContext.Provider value={data}>\n              <Container>\n                <Row>\n                  <Column width=\"3\">\n                    <Profile />\n                    <PrimaryButton\n                      css={{marginTop: 20, width: '100%'}}\n                      onClick={this.context.logout}\n                    >\n                      Logout\n                    </PrimaryButton>\n                    <ButtonLink css={{marginTop: 20, width: '100%'}} to=\"/\">\n                      Try another\n                    </ButtonLink>\n                  </Column>\n                  <Column width=\"9\">\n                    <Text size=\"subheading\">Repositories</Text>\n                    <RepoFilter\n                      filter={filter}\n                      onUpdate={this.handleFilterUpdate}\n                    />\n                    <RepoList filter={filter} />\n                  </Column>\n                </Row>\n              </Container>\n            </UserContext.Provider>\n          ) : (\n            <IsolatedContainer>I have no idea what's up...</IsolatedContainer>\n          )\n        }\n      </Query>\n    )\n  }\n}\n\nexport default User\n\n/*\neslint\nno-unused-vars: [\"warn\", {\"varsIgnorePattern\": \"(jsx)\"}]\nreact/react-in-jsx-scope: \"off\"\n*/\n"],"sourceRoot":""}